{"version":3,"sources":["projects/quote-machine/quote-machine.js","projects/pomodoro-clock/pomodoro-clock.js","App.js","index.js"],"names":["QuoteMachine","props","getColor","Math","ceil","random","getQuote","randomNumber","round","quotes","length","randomColor","setState","currentQuote","quote","currentAuthor","author","document","getElementById","style","backgroundColor","boxShadow","state","bind","this","id","className","onClick","href","rel","target","React","Component","PomodoroClock","isBreak","sessionLength","breakLength","timeLeft","isRunning","audioRef","createRef","handleStartStop","decrementBreak","incrementBreak","decrementSession","incrementSession","startTimer","stopTimer","tick","reset","current","pause","load","play","interval","setInterval","clearInterval","minutes","floor","seconds","time","ref","src","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.f3898506.chunk.js","sourcesContent":["import React from 'react'\r\nimport quotes from './quotes.json'\r\n\r\nexport default class QuoteMachine extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentQuote: null,\r\n            currentAuthor: null\r\n        }\r\n        this.getQuote = this.getQuote.bind(this);\r\n        this.getColor = this.getColor.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getQuote()\r\n    }\r\n\r\n    getColor = () => {\r\n        return `hsl(${Math.ceil(Math.random() * 359)}, 100%, 90%)`\r\n    }\r\n\r\n    getQuote = () => {\r\n\r\n        let randomNumber = Math.round(Math.random() * (quotes.quotes.length - 1));\r\n        let randomColor = this.getColor()\r\n        \r\n        this.setState({\r\n            currentQuote: quotes.quotes[randomNumber].quote,\r\n            currentAuthor: quotes.quotes[randomNumber].author\r\n        })\r\n\r\n        document.getElementById('quote-box').style.backgroundColor = randomColor;\r\n        document.getElementById('quote-box').style.boxShadow = `7px 7px ${randomColor}, 10px 10px black`\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"quote-box\" className=\"project\">\r\n                <h2>Random Quote Machine</h2>\r\n                <div id=\"text-row\">\r\n                    <h3 id=\"text\">{this.state.currentQuote}</h3>\r\n                </div>\r\n\r\n                <div id=\"author-row\">\r\n                    <h4 id=\"author\">-{this.state.currentAuthor}</h4>\r\n                </div>\r\n       \r\n                <div id=\"button-row\">\r\n                    <button onClick={this.getQuote} id=\"new-quote\" className=\"btn btn-danger\">New Quote</button>\r\n                    <button className=\"btn btn-primary\"><a href={`https://www.twitter.com/intent/tweet?text=${this.state.currentQuote}%0A-${this.state.currentAuthor}`} rel=\"noopener noreferrer\" target=\"_blank\">Tweet Quote</a></button>\r\n                </div>\r\n            </div>\r\n        )   \r\n    }\r\n\r\n}","import React from 'react';\r\n\r\nexport default class PomodoroClock extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isBreak: false,\r\n            sessionLength: 25,\r\n            breakLength: 5,\r\n            timeLeft: 1500,\r\n            isRunning: false\r\n        }\r\n        this.audioRef = React.createRef()\r\n\r\n        this.handleStartStop = this.handleStartStop.bind(this);\r\n        this.decrementBreak = this.decrementBreak.bind(this);\r\n        this.incrementBreak = this.incrementBreak.bind(this);\r\n        this.decrementSession = this.decrementSession.bind(this);\r\n        this.incrementSession = this.incrementSession.bind(this);\r\n        this.startTimer = this.startTimer.bind(this);\r\n        this.stopTimer = this.stopTimer.bind(this);\r\n        this.tick = this.tick.bind(this);\r\n        this.reset = this.reset.bind(this);\r\n    }\r\n\r\n    decrementBreak() {\r\n        if (this.state.breakLength > 1) {\r\n            this.setState({\r\n                breakLength: this.state.breakLength - 1,\r\n                timeLeft: (this.state.isBreak) ? (this.state.breakLength - 1) * 60 : this.state.timeLeft\r\n            })\r\n        }\r\n    }\r\n\r\n    incrementBreak() {\r\n        if (this.state.breakLength < 60) {\r\n            this.setState({\r\n                breakLength: this.state.breakLength + 1,\r\n                timeLeft: (this.state.isBreak) ? (this.state.breakLength + 1) * 60 : this.state.timeLeft\r\n            })\r\n        }\r\n    }\r\n\r\n    decrementSession() {\r\n        if (this.state.sessionLength > 1) {\r\n            this.setState({\r\n                sessionLength: this.state.sessionLength - 1,\r\n                timeLeft: (!this.state.isBreak) ? (this.state.sessionLength - 1) * 60 : this.state.timeLeft\r\n            })\r\n        }\r\n    }\r\n\r\n    incrementSession() {\r\n        if (this.state.sessionLength < 60) {\r\n            this.setState({\r\n                sessionLength: this.state.sessionLength + 1,\r\n                timeLeft: (!this.state.isBreak) ? (this.state.sessionLength + 1) * 60 : this.state.timeLeft\r\n            })\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.stopTimer();\r\n        this.setState({\r\n            isBreak: false,\r\n            sessionLength: 25,\r\n            breakLength: 5,\r\n            timeLeft: 1500,\r\n            isRunning: false\r\n        })\r\n        this.audioRef.current.pause();\r\n        this.audioRef.current.load();\r\n    }\r\n\r\n    tick() {\r\n        this.setState({ timeLeft: this.state.timeLeft - 1 })\r\n        if (this.state.timeLeft < 0) {\r\n            this.stopTimer();\r\n            this.audioRef.current.play();\r\n            this.setState({ isBreak: !this.state.isBreak });\r\n            this.setState({ timeLeft: (this.state.isBreak) ? this.state.breakLength * 60 : this.state.sessionLength * 60 });\r\n            this.startTimer();\r\n        }\r\n    }\r\n\r\n    startTimer() {\r\n        this.interval = setInterval(this.tick, 1000)\r\n    }\r\n\r\n    stopTimer() {\r\n        clearInterval(this.interval)\r\n    }\r\n\r\n    handleStartStop() {\r\n        if (this.state.isRunning) {\r\n            this.stopTimer()\r\n        } else {\r\n            this.startTimer()\r\n        }\r\n        this.setState({ isRunning: !this.state.isRunning })\r\n    }\r\n\r\n    render() {\r\n\r\n        var minutes = Math.floor(this.state.timeLeft / 60);\r\n        var seconds = this.state.timeLeft % 60;\r\n        var time = (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\r\n\r\n        return (\r\n            <div id=\"clock-body\" className=\"project\">\r\n\r\n                <h2>Pomodoro Clock</h2>\r\n\r\n                <div id=\"control-time-left\">   {/* Control Time Left */}\r\n                    <div>   {/* Control Break */}\r\n                        <button className=\"btn btn-primary\" onClick={this.decrementBreak}>  -  </button>\r\n                        <div className=\"timer-control-label\">\r\n                            <div>Break Length</div>\r\n                            <div>{this.state.breakLength}</div>\r\n                        </div>\r\n                        <button className=\"btn btn-primary\" onClick={this.incrementBreak}>  +  </button>\r\n                    </div>\r\n\r\n                    <div>    {/* Control Session */}    \r\n                        <button className=\"btn btn-primary\" onClick={this.decrementSession}>  -  </button>\r\n                        <div className=\"timer-control-label\">\r\n                            <div>Session Length</div>\r\n                            <div>{this.state.sessionLength}</div>\r\n                        </div>\r\n                        <button className=\"btn btn-primary\" onClick={this.incrementSession}>  +  </button>\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n                <div>   {/* Display */}\r\n                    <div>{this.state.isBreak ? \"Break\" : \"Session\"}</div>\r\n                    <div>{time}</div>\r\n                </div>\r\n\r\n                <div>   {/* Control Timer */}\r\n                    <button className=\"btn btn-info\" onClick={this.handleStartStop}>{this.state.isRunning ? \"Stop\" : \"Start\"}</button>\r\n                    <button className=\"btn btn-danger\" onClick={this.reset}>Reset</button>\r\n                </div>\r\n\r\n                <audio id='beep' ref={this.audioRef} src=\"http://www.pacdv.com/sounds/interface_sound_effects/sound98.wav\"></audio>\r\n            </div >)\r\n    }\r\n}\r\n\r\nclass Display extends React.Component {\r\n\r\n    render() {\r\n        var minutes = Math.floor(this.props.timeLeft / 60);\r\n        var seconds = this.props.timeLeft % 60;\r\n        var time = (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\r\n        return (\r\n            <div>\r\n                <div id=\"container\">\r\n                    <div id=\"timer-label\">{this.props.isBreak ? \"Break\" : \"Session\"}</div>\r\n                    <div id=\"time-left\">{time} </div>\r\n                </div>\r\n                <button id=\"start_stop\" className=\"btn btn-info\" onClick={this.props.startStop}>{this.props.isRunning ? \"Stop\" : \"Start\"}</button>\r\n                <button id=\"reset\" className=\"btn btn-danger\" onClick={this.props.reset}>Reset</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport QuoteMachine from './projects/quote-machine/quote-machine';\nimport PomodoroClock from './projects/pomodoro-clock/pomodoro-clock';\n\nfunction App() {\n  return (\n    <div id=\"App\">\n      <h1>Miscellaneous JavaScript Projects</h1>\n      <QuoteMachine />\n      <PomodoroClock />\n      <footer><strong>Created by <a href=\"https://lucassorenson.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">Lucas Sorenson</a></strong></footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}